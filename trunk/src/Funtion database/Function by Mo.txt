-- ALTER TABLE nguoidung_quyen ADD COLUMN uyquyen boolean DEFAULT false;


-- Function: doimatkhau(character, bigint)

-- DROP FUNCTION doimatkhau(character, bigint);


CREATE OR REPLACE FUNCTION doimatkhau(passwordin character, id_nguoidungin bigint)
  RETURNS boolean AS
$BODY$
BEGIN
	LOOP
	UPDATE nguoidung SET "password"=passwordin WHERE id_nguoidung=id_nguoidungin;
	IF found THEN
            RETURN true;
        END IF;
        RETURN false;
        END LOOP;
END;
$BODY$
  LANGUAGE 'plpgsql' VOLATILE
  COST 100;
ALTER FUNCTION doimatkhau(character, bigint) OWNER TO postgres;



-- Function: kiemtradangnhap(character, character)

-- DROP FUNCTION kiemtradangnhap(character, character);

CREATE OR REPLACE FUNCTION kiemtradangnhap("password" character, username character)
  RETURNS bigint AS
$BODY$SELECT 
  nguoidung.id_nguoidung
FROM 
  public.nguoidung
WHERE 
  nguoidung."password" = $1 AND 
  nguoidung.username = $2;$BODY$
  LANGUAGE 'sql' VOLATILE
  COST 100;
ALTER FUNCTION kiemtradangnhap(character, character) OWNER TO postgres;



-- Function: suanguoidung(character, character, bigint)

-- DROP FUNCTION suanguoidung(character, character, bigint);

CREATE OR REPLACE FUNCTION suanguoidung("password" character, username character, id_nguoidung bigint)
  RETURNS bigint AS
$BODY$UPDATE nguoidung
   SET "password"=$1, username=$2
 WHERE id_nguoidung=$3 returning id_nguoidung;
$BODY$
  LANGUAGE 'sql' VOLATILE
  COST 100;
ALTER FUNCTION suanguoidung(character, character, bigint) OWNER TO postgres;



-- Function: suanguoidungnhom(bigint, bigint)

-- DROP FUNCTION suanguoidungnhom(bigint, bigint);

CREATE OR REPLACE FUNCTION suanguoidungnhom(nhoms_id_nhomin bigint, nguoidungs_id_nguoidungin bigint)
  RETURNS boolean AS
$BODY$
BEGIN
	LOOP
	UPDATE nguoidung_nhom SET nhoms_id_nhom=nhoms_id_nhomin WHERE nguoidungs_id_nguoidung=nguoidungs_id_nguoidungin;
	IF found THEN
            RETURN true;
        END IF;
        RETURN false;
        END LOOP;
END;
$BODY$
  LANGUAGE 'plpgsql' VOLATILE
  COST 100;
ALTER FUNCTION suanguoidungnhom(bigint, bigint) OWNER TO postgres;



-- Function: suanhom(character, character, bigint)

-- DROP FUNCTION suanhom(character, character, bigint);


CREATE OR REPLACE FUNCTION suanhom(motain character, tennhomin character, id_nhomin bigint)
  RETURNS boolean AS
$BODY$
BEGIN
	LOOP
	UPDATE nhom SET mota=motain, tennhom=tennhomin WHERE id_nhom=id_nhomin;
	IF found THEN
            RETURN true;
        END IF;
        RETURN false;
        END LOOP;
END;
$BODY$
  LANGUAGE 'plpgsql' VOLATILE
  COST 100;
ALTER FUNCTION suanhom(character, character, bigint) OWNER TO postgres;




-- Function: suanhomtunguoidung(bigint, bigint)

-- DROP FUNCTION suanhomtunguoidung(bigint, bigint);

CREATE OR REPLACE FUNCTION suanhomtunguoidung(nhoms_id_nhom bigint, nguoidungs_id_nguoidung bigint)
  RETURNS bigint AS
$BODY$UPDATE nguoidung_nhom SET nhoms_id_nhom = $1 
where nguoidungs_id_nguoidung=$2 returning nguoidungs_id_nguoidung;
$BODY$
  LANGUAGE 'sql' VOLATILE
  COST 100;
ALTER FUNCTION suanhomtunguoidung(bigint, bigint) OWNER TO postgres;



-- Function: themnguoidung(date, character, character)

-- DROP FUNCTION themnguoidung(date, character, character);

CREATE OR REPLACE FUNCTION themnguoidung(ngaytao date, "password" character, username character)
  RETURNS bigint AS
$BODY$INSERT INTO nguoidung(
            ngaytao, "password", username)
    VALUES ($1,$2,$3) returning id_nguoidung;
$BODY$
  LANGUAGE 'sql' VOLATILE
  COST 100;
ALTER FUNCTION themnguoidung(date, character, character) OWNER TO postgres;



-- Function: themnguoidungnhom(bigint, bigint)

-- DROP FUNCTION themnguoidungnhom(bigint, bigint);

CREATE OR REPLACE FUNCTION themnguoidungnhom(nguoidungs_id_nguoidung bigint, nhoms_id_nhom bigint)
  RETURNS bigint AS
$BODY$INSERT INTO nguoidung_nhom(
            nguoidungs_id_nguoidung, nhoms_id_nhom)
    VALUES ($1,$2) returning nguoidungs_id_nguoidung;$BODY$
  LANGUAGE 'sql' VOLATILE
  COST 100;
ALTER FUNCTION themnguoidungnhom(bigint, bigint) OWNER TO postgres;



-- Function: themnguoidungquyen(bigint, bigint)

-- DROP FUNCTION themnguoidungquyen(bigint, bigint);

CREATE OR REPLACE FUNCTION themnguoidungquyen(nguoidungs_id_nguoidung bigint, quyens_id_quyen bigint)
  RETURNS bigint AS
$BODY$INSERT INTO nguoidung_quyen(
            nguoidungs_id_nguoidung, quyens_id_quyen)
    VALUES ($1, $2) returning nguoidungs_id_nguoidung;
$BODY$
  LANGUAGE 'sql' VOLATILE
  COST 100;
ALTER FUNCTION themnguoidungquyen(bigint, bigint) OWNER TO postgres;


-- Function: suanguoidungquyen(bigint, bigint)

-- DROP FUNCTION suanguoidungquyen(bigint, bigint);

CREATE OR REPLACE FUNCTION suanguoidungquyen(quyens_id_quyenin bigint, nguoidungs_id_nguoidungin bigint)
  RETURNS boolean AS
$BODY$
BEGIN
	LOOP
	UPDATE nguoidung_quyen SET quyens_id_quyen=quyens_id_quyenin WHERE nguoidungs_id_nguoidung=nguoidungs_id_nguoidungin;
	IF found THEN
            RETURN true;
        END IF;
        RETURN false;
        END LOOP;
END;
$BODY$
  LANGUAGE 'plpgsql' VOLATILE
  COST 100;
ALTER FUNCTION suanguoidungquyen(bigint, bigint) OWNER TO postgres;


-- Function: xoanguoidungquyen(bigint)

-- DROP FUNCTION xoanguoidungquyen(bigint);

CREATE OR REPLACE FUNCTION xoanguoidungquyen(nguoidungs_id_nguoidung bigint)
  RETURNS bigint AS
$BODY$DELETE FROM nguoidung_quyen
 WHERE nguoidungs_id_nguoidung=$1 returning nguoidungs_id_nguoidung;
$BODY$
  LANGUAGE 'sql' VOLATILE
  COST 100;
ALTER FUNCTION xoanguoidungquyen(bigint) OWNER TO postgres;



-- Function: themnhom(character, character)

-- DROP FUNCTION themnhom(character, character);

CREATE OR REPLACE FUNCTION themnhom(mota character, tennhom character)
  RETURNS bigint AS
$BODY$INSERT INTO nhom(
            mota, tennhom)
    VALUES ($1,$2) returning id_nhom;
$BODY$
  LANGUAGE 'sql' VOLATILE
  COST 100;
ALTER FUNCTION themnhom(character, character) OWNER TO postgres;



-- Function: themnhomquyen(bigint, bigint)

-- DROP FUNCTION themnhomquyen(bigint, bigint);

CREATE OR REPLACE FUNCTION themnhomquyen(nhoms_id_nhom bigint, quyens_id_quyen bigint)
  RETURNS bigint AS
$BODY$INSERT INTO nhom_quyen(
            nhoms_id_nhom, quyens_id_quyen)
    VALUES ($1, $2) returning nhoms_id_nhom;
$BODY$
  LANGUAGE 'sql' VOLATILE
  COST 100;
ALTER FUNCTION themnhomquyen(bigint, bigint) OWNER TO postgres;


-- Function: suanhomquyen(bigint, bigint)

-- DROP FUNCTION suanhomquyen(bigint, bigint);

CREATE OR REPLACE FUNCTION suanhomquyen(quyens_id_quyenin bigint, nhoms_id_nhomin bigint)
  RETURNS boolean AS
$BODY$
BEGIN
	LOOP
	UPDATE nhom_quyen SET quyens_id_quyen=quyens_id_quyenin WHERE nhoms_id_nhom=nhoms_id_nhomin;
	IF found THEN
            RETURN true;
        END IF;
        RETURN false;
        END LOOP;
END;
$BODY$
  LANGUAGE 'plpgsql' VOLATILE
  COST 100;
ALTER FUNCTION suanhomquyen(bigint, bigint) OWNER TO postgres;


-- Function: xoanhomquyen(bigint)

-- DROP FUNCTION xoanhomquyen(bigint);

CREATE OR REPLACE FUNCTION xoanhomquyen(nhoms_id_nhom bigint)
  RETURNS bigint AS
$BODY$DELETE FROM nhom_quyen
 WHERE nhoms_id_nhom=$1 returning nhoms_id_nhom;
$BODY$
  LANGUAGE 'sql' VOLATILE
  COST 100;
ALTER FUNCTION xoanhomquyen(bigint) OWNER TO postgres;



-- Function: timidnguoidungtuusername(character)

-- DROP FUNCTION timidnguoidungtuusername(character);

CREATE OR REPLACE FUNCTION timidnguoidungtuusername(username character)
  RETURNS bigint AS
$BODY$SELECT id_nguoidung
  FROM nguoidung where username=$1;
$BODY$
  LANGUAGE 'sql' VOLATILE
  COST 100;
ALTER FUNCTION timidnguoidungtuusername(character) OWNER TO postgres;



-- Function: timidnhomtuidnguoidung(bigint)

-- DROP FUNCTION timidnhomtuidnguoidung(bigint);

CREATE OR REPLACE FUNCTION timidnhomtuidnguoidung(nguoidungs_id_nguoidung bigint)
  RETURNS bigint AS
$BODY$SELECT nhoms_id_nhom
  FROM nguoidung_nhom where nguoidungs_id_nguoidung=$1;
$BODY$
  LANGUAGE 'sql' VOLATILE
  COST 100;
ALTER FUNCTION timidnhomtuidnguoidung(bigint) OWNER TO postgres;



-- Function: timidquyentutenquyen(character)

-- DROP FUNCTION timidquyentutenquyen(character);

CREATE OR REPLACE FUNCTION timidquyentutenquyen(tenquyen character)
  RETURNS bigint AS
$BODY$SELECT id_quyen FROM quyen where tenquyen=$1;
$BODY$
  LANGUAGE 'sql' VOLATILE
  COST 100;
ALTER FUNCTION timidquyentutenquyen(character) OWNER TO postgres;



-- Function: timidtutennhom(character)

-- DROP FUNCTION timidtutennhom(character);

CREATE OR REPLACE FUNCTION timidtutennhom(tennhom character)
  RETURNS bigint AS
$BODY$SELECT id_nhom
  FROM nhom where tennhom= $1;
$BODY$
  LANGUAGE 'sql' VOLATILE
  COST 100;
ALTER FUNCTION timidtutennhom(character) OWNER TO postgres;



-- Function: uyquyen(bigint, bigint, boolean)

-- DROP FUNCTION uyquyen(bigint, bigint, boolean);

CREATE OR REPLACE FUNCTION uyquyen(nguoidungs_id_nguoidung bigint, quyens_id_quyen bigint, uyquyen boolean)
  RETURNS bigint AS
$BODY$INSERT INTO nguoidung_quyen(
            nguoidungs_id_nguoidung, quyens_id_quyen, uyquyen)
    VALUES ($1, $2, $3) returning nguoidungs_id_nguoidung;
$BODY$
  LANGUAGE 'sql' VOLATILE
  COST 100;
ALTER FUNCTION uyquyen(bigint, bigint, boolean) OWNER TO postgres;


-- Function: xoanguoidung(bigint)

-- DROP FUNCTION xoanguoidung(bigint);

CREATE OR REPLACE FUNCTION xoanguoidung(id_nguoidung bigint)
  RETURNS bigint AS
$BODY$DELETE FROM nguoidung
 WHERE id_nguoidung=$1 returning id_nguoidung;
$BODY$
  LANGUAGE 'sql' VOLATILE
  COST 100;
ALTER FUNCTION xoanguoidung(bigint) OWNER TO postgres;



-- Function: xoanguoidungnhom(bigint)

-- DROP FUNCTION xoanguoidungnhom(bigint);

CREATE OR REPLACE FUNCTION xoanguoidungnhom(nguoidungs_id_nguoidung bigint)
  RETURNS bigint AS
$BODY$DELETE FROM nguoidung_nhom
 WHERE nguoidungs_id_nguoidung=$1 returning nguoidungs_id_nguoidung;
$BODY$
  LANGUAGE 'sql' VOLATILE
  COST 100;
ALTER FUNCTION xoanguoidungnhom(bigint) OWNER TO postgres;



-- Function: xoanhom(bigint)

-- DROP FUNCTION xoanhom(bigint);

CREATE OR REPLACE FUNCTION xoanhom(id_nhom bigint)
  RETURNS bigint AS
$BODY$DELETE FROM nhom
 WHERE id_nhom=$1 returning id_nhom;
$BODY$
  LANGUAGE 'sql' VOLATILE
  COST 100;
ALTER FUNCTION xoanhom(bigint) OWNER TO postgres;


-- Function: taoloaidiem(bigint, character, character)

-- DROP FUNCTION taoloaidiem(bigint, character, character);

CREATE OR REPLACE FUNCTION taoloaidiem(heso bigint, kyhieu character, tenloaidiem character)
  RETURNS bigint AS
$BODY$INSERT INTO loaidiem(
            heso, kyhieu, tenloaidiem)
    VALUES ($1,$2,$3) returning id_loaidiem;
$BODY$
  LANGUAGE 'sql' VOLATILE
  COST 100;
ALTER FUNCTION taoloaidiem(bigint, character, character) OWNER TO postgres;


-- Function: taosodiem(integer, character, bigint, bigint, bigint, bigint)

-- DROP FUNCTION taosodiem(integer, character, bigint, bigint, bigint, bigint);

CREATE OR REPLACE FUNCTION taosodiem(hocky integer, tensodiem character, id_monhoc bigint, id_giaovien bigint, id_lop bigint, id_namhoc bigint)
  RETURNS bigint AS
$BODY$INSERT INTO sodiem(
            hocky, tensodiem, id_monhoc, id_giaovien, id_lop, id_namhoc)
    VALUES ($1,$2,$3,$4,$5,$6) returning id_sodiem;
$BODY$
  LANGUAGE 'sql' VOLATILE
  COST 100;
ALTER FUNCTION taosodiem(integer, character, bigint, bigint, bigint, bigint) OWNER TO postgres;



-- Function: taochitietsodiem(bigint, bigint, bigint)

-- DROP FUNCTION taochitietsodiem(bigint, bigint, bigint);

CREATE OR REPLACE FUNCTION taochitietsodiem(id_hocsinh bigint, id_lop bigint, id_sodiem bigint)
  RETURNS bigint AS
$BODY$INSERT INTO chitietsodiem(
            id_hocsinh, id_lop, id_sodiem)
    VALUES ($1,$2,$3) returning id_chitietsodiem;
$BODY$
  LANGUAGE 'sql' VOLATILE
  COST 100;
ALTER FUNCTION taochitietsodiem(bigint, bigint, bigint) OWNER TO postgres;


-- Function: taosolanloaidiem(bigint, bigint)

-- DROP FUNCTION taosolanloaidiem(bigint, bigint);

CREATE OR REPLACE FUNCTION taosolanloaidiem(id_loaidiem bigint, lan bigint)
  RETURNS bigint AS
$BODY$INSERT INTO danhsachloaidiem(
            id_loaidiem, lan)
    VALUES ($1,$2) returning id_danhsachloaidiem;
$BODY$
  LANGUAGE 'sql' VOLATILE
  COST 100;
ALTER FUNCTION taosolanloaidiem(bigint, bigint) OWNER TO postgres;


-- Function: taodiem(double precision, bigint, bigint)

-- DROP FUNCTION taodiem(double precision, bigint, bigint);

CREATE OR REPLACE FUNCTION taodiem(diem double precision, id_loaidiem bigint, id_chitietsodiem bigint)
  RETURNS bigint AS
$BODY$INSERT INTO diem(
            diem, id_loaidiem, id_chitietsodiem)
    VALUES ($1, $2, $3) returning id_diem;
$BODY$
  LANGUAGE 'sql' VOLATILE
  COST 100;
ALTER FUNCTION taodiem(double precision, bigint, bigint) OWNER TO postgres;


-- Function: suadiem(bigint, double, bigint ,bigint)

-- DROP FUNCTION suadiem(bigint, double, bigint ,bigint);


CREATE OR REPLACE FUNCTION suadiem(id_diemIn bigint, diemIn double precision, id_loaidiemIn bigint, id_chitietsodiemIn bigint)
  RETURNS boolean AS
$BODY$
BEGIN
	LOOP
	UPDATE diem SET diem=diemIn , id_loaidiem=id_loaidiemIn , id_chitietsodiem=id_chitietsodiemIn WHERE id_diem = id_diemIn;
	IF found THEN
            RETURN true;
        END IF;
        RETURN false;
        END LOOP;
END;
$BODY$
  LANGUAGE 'plpgsql' VOLATILE
  COST 100;
ALTER FUNCTION suadiem(bigint, double precision, bigint ,bigint) OWNER TO postgres;


-- Function: suadiemtrungbinh(bigint,double precision)

-- DROP FUNCTION suadiemtrungbinh(bigint,double precision);

CREATE OR REPLACE FUNCTION suadiemtrungbinh(id_chitietsodiemIn bigint, diemtrungbinhIn double precision)
  RETURNS boolean AS
$BODY$
BEGIN
	LOOP
	UPDATE chitietsodiem SET diemtrungbinh=diemtrungbinhIn WHERE id_chitietsodiem=id_chitietsodiemIn;
	IF found THEN
            RETURN true;
        END IF;
        RETURN false;
        END LOOP;
END;
$BODY$
  LANGUAGE 'plpgsql' VOLATILE
  COST 100;
ALTER FUNCTION suadiemtrungbinh(bigint,double precision) OWNER TO postgres;


-- Function: luudiemhocba(integer, integer, bigint, bigint, double precision)

-- DROP FUNCTION luudiemhocba(integer, integer, bigint, bigint, double precision);

CREATE OR REPLACE FUNCTION luudiemhocba(hocky integer, id_namhoc integer, id_hocsinh bigint, id_lop bigint, diemtrungbinh double precision)
  RETURNS bigint AS
$BODY$INSERT INTO hocba(hocky, id_namhoc,
id_hocsinh, id_lop, diemtrungbinh)
    VALUES ($1,$2,$3,$4,$5) returning id_hocba;
$BODY$
  LANGUAGE 'sql' VOLATILE
  COST 100;
ALTER FUNCTION luudiemhocba(integer, integer, bigint, bigint, double precision) OWNER TO postgres;


-- Function: xetlenlop(bigint, bigint, bigint)

-- DROP FUNCTION xetlenlop(bigint, bigint, bigint);

CREATE OR REPLACE FUNCTION xetlenlop(id_hocsinh bigint, id_lop bigint, id_namhoc bigint)
  RETURNS bigint AS
$BODY$INSERT INTO lenlop(
            id_hocsinh, id_lop, id_namhoc)
    VALUES ($1,$2,$3) returning id_lenlop;
$BODY$
  LANGUAGE 'sql' VOLATILE
  COST 100;
ALTER FUNCTION xetlenlop(bigint, bigint, bigint) OWNER TO postgres;


-- Function: themquyen(character, character)

-- DROP FUNCTION themquyen(character, character);

CREATE OR REPLACE FUNCTION themquyen(mota character, tenquyen character)
  RETURNS bigint AS
$BODY$INSERT INTO quyen(
            mota, tenquyen)
    VALUES ($1,$2) returning id_quyen;
$BODY$
  LANGUAGE 'sql' VOLATILE
  COST 100;
ALTER FUNCTION themquyen(character, character) OWNER TO postgres;



-- Function:suaquyen(character, character, bigint)

-- DROP FUNCTION suaquyen(character, character, bigint);


CREATE OR REPLACE FUNCTION suaquyen(motain character, tenquyenin character, id_quyenin bigint)
  RETURNS boolean AS
$BODY$
BEGIN
	LOOP
	UPDATE quyen SET mota=motain, tenquyen=tenquyenin WHERE id_quyen=id_quyenin;
	IF found THEN
            RETURN true;
        END IF;
        RETURN false;
        END LOOP;
END;
$BODY$
  LANGUAGE 'plpgsql' VOLATILE
  COST 100;
ALTER FUNCTION suaquyen(character, character, bigint) OWNER TO postgres;


-- Function: xoaquyen(bigint)

-- DROP FUNCTION xoaquyen(bigint);

CREATE OR REPLACE FUNCTION xoaquyen(id_quyenin bigint)
  RETURNS boolean AS
$BODY$
BEGIN
	LOOP
	DELETE FROM quyen WHERE id_quyen=id_quyenin;
	IF found THEN
            RETURN true;
        END IF;
        RETURN false;
        END LOOP;
END;
$BODY$
  LANGUAGE 'plpgsql' VOLATILE
  COST 100;
ALTER FUNCTION xoaquyen(bigint) OWNER TO postgres;



-- Function: danhsachloaidiem(bigint, integer)

-- DROP FUNCTION danhsachloaidiem(bigint, integer);

CREATE OR REPLACE FUNCTION danhsachloaidiem(id_loaidiem bigint, lan integer)
  RETURNS void AS
$BODY$INSERT INTO danhsachloaidiem(
            id_loaidiem, lan)
    VALUES ($1,$2);
$BODY$
  LANGUAGE 'sql' VOLATILE
  COST 100;
ALTER FUNCTION danhsachloaidiem(bigint, integer) OWNER TO postgres;


-- Function: themdanhsachloaidiem(bigint, integer)

-- DROP FUNCTION themdanhsachloaidiem(bigint, integer);

CREATE OR REPLACE FUNCTION themdanhsachloaidiem(id_loaidiem bigint, lan integer)
  RETURNS bigint AS
$BODY$INSERT INTO danhsachloaidiem(
            id_loaidiem, lan)
    VALUES ($1,$2) returning id_danhsachloaidiem;
$BODY$
  LANGUAGE 'sql' VOLATILE
  COST 100;
ALTER FUNCTION themdanhsachloaidiem(bigint, integer) OWNER TO postgres;


-- Function: taonamhocmoi(bigint)

-- DROP FUNCTION taonamhocmoi(bigint);

CREATE OR REPLACE FUNCTION taonamhocmoi(id_namhoc bigint)
  RETURNS bigint AS
$BODY$DELETE FROM namhocmoi;

INSERT INTO namhocmoi(id_namhoc) 
VALUES ($1) returning id_namhocmoi;
$BODY$
  LANGUAGE 'sql' VOLATILE
  COST 100;
ALTER FUNCTION taonamhocmoi(bigint) OWNER TO postgres;
